(function() {var implementors = {
"ncomm":[],
"ncomm_clients_and_servers":[["impl&lt;Req, Res&gt; <a class=\"trait\" href=\"ncomm_core/client_server/trait.Client.html\" title=\"trait ncomm_core::client_server::Client\">Client</a> for <a class=\"struct\" href=\"ncomm_clients_and_servers/local/struct.LocalClient.html\" title=\"struct ncomm_clients_and_servers::local::LocalClient\">LocalClient</a>&lt;Req, Res&gt;"],["impl&lt;Req, Res, Serial, Err, const BUFFER_SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"ncomm_core/client_server/trait.Client.html\" title=\"trait ncomm_core::client_server::Client\">Client</a> for <a class=\"struct\" href=\"ncomm_clients_and_servers/serial/struct.SerialClient.html\" title=\"struct ncomm_clients_and_servers::serial::SerialClient\">SerialClient</a>&lt;Req, Res, Serial, Err, BUFFER_SIZE&gt;<div class=\"where\">where\n    Req: <a class=\"trait\" href=\"ncomm_utils/packing/trait.Packable.html\" title=\"trait ncomm_utils::packing::Packable\">Packable</a>,\n    Res: <a class=\"trait\" href=\"ncomm_utils/packing/trait.Packable.html\" title=\"trait ncomm_utils::packing::Packable\">Packable</a>,\n    Serial: ReadReady&lt;Error = Err&gt; + Read&lt;Error = Err&gt; + Write&lt;Error = Err&gt;,\n    Err: Error,</div>"],["impl&lt;Req: <a class=\"trait\" href=\"ncomm_utils/packing/trait.Packable.html\" title=\"trait ncomm_utils::packing::Packable\">Packable</a>, Res: <a class=\"trait\" href=\"ncomm_utils/packing/trait.Packable.html\" title=\"trait ncomm_utils::packing::Packable\">Packable</a>&gt; <a class=\"trait\" href=\"ncomm_core/client_server/trait.Client.html\" title=\"trait ncomm_core::client_server::Client\">Client</a> for <a class=\"struct\" href=\"ncomm_clients_and_servers/udp/struct.UdpClient.html\" title=\"struct ncomm_clients_and_servers::udp::UdpClient\">UdpClient</a>&lt;Req, Res&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()