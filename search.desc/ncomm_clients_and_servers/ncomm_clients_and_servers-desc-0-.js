searchState.loadedDescShard("ncomm_clients_and_servers", 0, "NComm Clients and Servers\nLocal Clients and Servers\nSerial Client and Server for communication using …\nUdp Datagram Clients and Servers\nA local client that sends requests via a crossbeam channel …\nA local server that receives data via a crossbeam channel …\nCreate a new local client for this local server\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new Local Server\nEmbedded-IO Error\nAn error occurred with pacing the data\nClient that sends requests and receives responses via a …\nAn Error regarding sending and receiving data via serial\nA serial server capable of receiving requests and sending …\nDestroy the SerialClient, returning the serial peripheral\nDestroy the SerialServer returning the serial peripheral\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new SerialClient from a serial peripheral\nCreate a new SerialServer from a serial device peripheral\nstd::io::Error\nAn error with packing the data\nA udp client that sends requests via a UdpSocket to a …\nAn error with sending udp packets\nA udp server that receives requests via a Udp Socket and …\nThe client you are sending data to is unknown\nRequest from an unknown client\nAdd a list of known clients and their socket addresses\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new Udp Client\nCreate a new Udp Server\nCreate a new Udp Server with a list of clients and …\nCheck the UDP socket for incoming Datagrams.")