searchState.loadedDescShard("ncomm_core", 0, "Ncomm-Core is a collection of traits that layout the core …\nNComm Client Server Traits.\nAn executor handles the scheduling and execution of nodes.\nA Singular Unit of Work.\nPublisher -&gt; Subscriber Communication\nNComm Update Server and Client.\nA common abstraction for all NComm clients to allow for …\nThe type of error from sending or receiving data from the …\nThe type of error from sending or receiving data from the …\nThe unique identifier type for the various clients\nThe type of data used as a request by the client\nThe type of data received as a request from the client\nThe type of data used as a response from the server\nThe type of data sent as a response to the client\nA common abstraction for all NComm servers that outlines …\nCheck for incoming requests from the client\nCheck for a response from the server containing both the …\nSend a request to the server this client is associated with\nSend a response to a specific client\nSend a collection of responses to specified clients\nAn executor handles the scheduling and execution of nodes\nThe current state an executor is in.\nThe nodes in the executor are current being updated\nThe nodes in the executor have been started and can now be …\nThe nodes in the executor are currently stopped.\nAdd a node to the executor.\nAdd a node to the executor with some given context.\nCheck whether the program has been interrupted\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStarts the nodes contained by the executor\nRun the update loop for a set amount of time (in …\nRun the update loop until the executor’s interrupt is …\nA Node represents a singular process that performs some …\nReturn the node’s update rate (in us)\nWhen an executor is stopped or has finished executing …\nComplete the necessary setup functionalities for a Node.\nUpdate is called by the executor every get_update_delay …\nThe data to be published by the publisher\nThe error type from attempting to publish data\nThe basic publisher trait that enables the publishing of …\nThe basic subscriber trait that enables for the reading of …\nThe type of data stored in the subscriber\nUpdate the current data in the subscriber and return a …\nPublish a piece of data to the endpoint for clients to …\nThe type of error from sending or receiving data from the …\nThe type of error from sending or receiving data from and …\nThe unique identifier type for the various clients\nThe type of data used as a request by the client\nThe type of data received as a request from the client\nThe type of data used as a response from the server\nThe type of data sent as a response to the client\nThe type of data used as an update from the server\nThe type of data sent as an update to the client\nA common abstraction for all NComm update clients\nA common abstraction for all NComm update servers\nCheck for incoming requests from the client\nPoll for responses from the server\nPoll for updates from the server\nSend a request to the server this client is associated with\nSend a response to a specific client\nSend a collection of responses to specific clients\nSend an update to a specific client\nSend a collection of updates to specified client")